
#include <iostream>
#include <vector>
#include<string>
#include <matplotlibcpp.h>
#include <canal.hpp>

namespace plt = matplotlibcpp;

/*
  ---------------IMPULSE RESPONSE OF BUTTERWORTH HIGH PASS FILTER---------------------
  

*/

int main() {
  std::cout<< "Frequency Response of a Butterworth High Pass Filter" << "\n";
  
  std::string colors[] = {"b", "g", "r", "c"};
  int order[] = {2, 3, 5, 7}, n = 4, nn = 512;

  // cutt-off
  double fc = 40;

  // sampling
  double fs = 100;
  canal::math::Vector<double> a(3), b(3), f(nn);
  canal::math::Vector<canal::math::Complex<double>> h(nn);
  std::vector<double> xx(nn), yy(nn);
  std::tuple<canal::math::Vector<double>,
             canal::math::Vector<canal::math::Complex<double>>> fqz_data;

  
  for (int i = 0; i < n; i++) {
    
    //canal::dsp::ButterHighPass<double> bhpf(order[i], fc, fs);
    canal::dsp::ButterHighPass<double> bhpf(order[i], fc, fs);
    bhpf.design();
  
    a = canal::dsp::filt_a_coef(bhpf);
    b = canal::dsp::filt_b_coef(bhpf);   
    
    // call freqz
    fqz_data = canal::dsp::freqz(b, a, fs, nn);

    // Now plot impulse response
    
    for (int j = 0; j < nn; j++) {
      yy[j] = 20*std::log10(canal::math::abs(std::get<1>(fqz_data)[j]));
      xx[j] = std::get<0>(fqz_data)[j];
      
    }

     plt::plot(xx, yy, colors[i]);
     //plt::text(5*order[i]+4, -39, "N=");
  }

  
  plt::ylabel("Power (dB)");
  plt::xlabel("Frequency (Hz)");
  plt::grid("True");
  plt::xlim(0,50);
  plt::ylim(-80, 0);
  
  plt::save("./freq_response.png");
  plt::show();
  
   
  
  return 0;
}


// g++ -W -g -std=c++14 -I /home/patrick/COMP167/CompSci/ -I /home/patrick/COMP167/CompSci/dsp/iirFilter/ -I /home/patrick/COMP167/CompSci/math/ -I /home/patrick/COMP167/CompSci/math/vector/ -I /home/patrick/COMP167/CompSci/math/matrix/ -I /home/patrick/COMP167/CompSci/math/complex/ -I /home/patrick/COMP167/CompSci/eigen/ -I /home/patrick/COMP167/CompSci/dsp/ -I /home/patrick/COMP167/CompSci/dsp/misc_fun/ -I /home/patrick/COMP167/CompSci/data_struct/lists -I /home/patrick/COMP167/graphics/pyplotcpp/ -I /usr/include/python2.7/ test_bhp_mag_response.cpp -o lbf -lpython2.7


// g++ -W -g -std=c++14 -I /home/patrick/COMP167/CANAL/ -I /home/patrick/COMP167/CANAL/eigen/ -I /home/patrick/COMP167/CANAL/pyplotcpp/ -I /usr/include/python2.7 kalman_filter_1D.cpp -o kf -lpython2.7

