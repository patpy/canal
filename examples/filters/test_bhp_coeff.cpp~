
#include <iostream>
#include <vector>
#include<string>
#include <matplotlibcpp.h>
#include <dsp.hpp>
namespace plt = matplotlibcpp;
/*
  ---------------IMPULSE RESPONSE OF BUTTERWORTH LOW PASS FILTER---------------------

*/

int main() {
  std::cout<< "Hello Butterworth High Pass Filter Design" << "\n";
  
  int order = 5, nn = 96;

  // filter cutt-off frequency
  double fc = 40;

  // sampling rate
  double fs = 100;
  csl::col::MathVector<double> b, a, x(nn), y(nn);
  std::vector<double> xx(nn), yy(nn);
   
  // Generate impulse function
  x.set(0, 1.0);
  
  csl::spl::ButterHighPass<double> bhpf(order, fc, fs);
  bhpf.design();
  a = csl::spl::filt_a_coef_fun(bhpf);
  b = csl::spl::filt_b_coef_fun(bhpf);
  std::cout<< "Printing 'b' coefficients" <<"\n";
  csl::col::disp_vec_fun(b);
  std::cout<< "\n" << "Printing 'a' coefficients" <<"\n";
  csl::col::disp_vec_fun(a);
  y = csl::spl::filter_fun(b, a, x);
  
  // Now plot impulse response
  double ii = 0;
  for (int i = 0; i < nn; i++) {
    yy[i] = y[i];
    xx[i] = ii/fs*1000;
    ii++;
    }

  plt::plot(xx, yy, "g");
  plt::ylabel("Power");
  plt::xlabel("Time (ms)");
  plt::grid("True");
  plt::save("./butt_highpass_impulse_response1.png");
  plt::show();



   // Do freqz analysis
   
   //freqz_data = csl::spl::freqz_fun(b, a, fs, 512);
   
  
  return 0;
}

// g++ -W -g -std=c++14 -I /home/patrick/COMP167/CompSci/ -I /home/patrick/COMP167/CompSci/dsp/iirFilter/ -I /home/patrick/COMP167/CompSci/math/ -I /home/patrick/COMP167/CompSci/math/vector/ -I /home/patrick/COMP167/CompSci/math/matrix/ -I /home/patrick/COMP167/CompSci/math/complex/ -I /home/patrick/COMP167/CompSci/eigen/ -I /home/patrick/COMP167/CompSci/dsp/misc_fun/ -I /home/patrick/COMP167/CompSci/dsp/ -I /home/patrick/COMP167/CompSci/data_struct/lists -I /home/patrick/COMP167/graphics/pyplotcpp/ -I /usr/include/python2.7/ test_bhp_coeff.cpp -o lbf -lpython2.7

